#設定 escape 字元
# escape=\ 



#設定變數 (唯一可以在from之上)
ARG  SERVICE_JAR_FILE_NAME=services.jar

# FROM microsoft/nanoserver # for win
# FROM microsoft/windowsservercore
# FROM openjdk:8-jdk-alpine
# FROM busybox
# FROM nvidia/cuda:8.0-runtime-ubuntu16.04
FROM ubuntu

#---------------------------------------------------------

ENV variable2 test_var2

RUN echo "1 = ${variable1:-word}" #若沒有設定則為word
RUN echo "2 = ${variable2:+word}" #若有設定則為word, 沒設則為empty

ENV DEPLOYMENT_ROOT /opt   #設定 環境變數 為 /opt

RUN echo "path = ${DEPLOYMENT_ROOT}/${SERVICE_JAR_FILE_NAME}"  #印出參數


#---------------------------------------------------------
# RUN command 寫法

# for linux  (Ps:用"不用')
RUN /bin/sh -c "ls -al"  
RUN /bin/bash -c "echo hello"
RUN [ "sh", "-c", "echo $HOME" ]

# for win
# RUN cmd /S /C "notepad.exe" 

# for 多行寫法 
RUN /bin/bash -c 'source $HOME/.bashrc; \   
echo $HOME'

#---------------------------------------------------------


RUN apt-get dist-upgrade -y


#---------------------------------------------------------
# CMD 同個檔只能有一個(若有多個最後一個有效) , 用於提供 ENTRYPOINT 參數 

CMD echo "This is a test." | wc -
CMD ["/usr/bin/wc","--help"]

#---------------------------------------------------------
# LABEL 加入 metadata 給 image 

LABEL version="1.0"
LABEL description="This text illustrates \
that label-values can span multiple lines."

#註記作者
LABEL maintainer="gtu001@gmail.com" 

#---------------------------------------------------------
# EXPOSE 註記 docker container 運行時 listen 的 port (可被 -p override)

EXPOSE 80/tcp
EXPOSE 80/udp
EXPOSE 8080 

#---------------------------------------------------------
# ENV 設定環境變數

ENV myName="John Doe" myDog=Rex\ The\ Dog \
    myCat=fluffy

ENV myName John Doe
ENV myDog Rex The Dog
ENV myCat fluffy


#---------------------------------------------------------
# ADD 將本機的檔案複製到 image的path底下  (*符合多字元,?符合單字元)
#  [與]需要特別escape 做法是 重複兩次    --> ADD ./test[[0]].txt  /mydir/  (檔名為 : test[0].txt)
#  ＊＊　<src> 可為url 且 若為 壓縮檔  會自動解壓縮到目的去 

ADD ./Dockerfile  /mydir/
ADD ./*  /mydir/
ADD ./d*  /mydir/ 

RUN /bin/sh -c "cd /mydir/ && ls -al && pwd"  


#---------------------------------------------------------
# COPY 將本機的檔案複製到 image的path底下 (單純複製, 無特性)

COPY ./Dockerfile  /mydir2/

RUN /bin/sh -c "cd /mydir2/ && ls -al && pwd"  


#---------------------------------------------------------
# ENTRYPOINT -> 會跟在 exec 指令後面 的參數 , 會覆蓋 CMD 指令
# 上述的CMD 會無效

ENTRYPOINT ["top", "-b"]
ENTRYPOINT exec top -b

### ENTRYPOINT 與  CMD 至少有一個要被定義, 
### ENTRYPOINT 通常用在可執行黨屬性的 container
### CMD 應被設定為 default屬性 , 在執行時可被override

#---------------------------------------------------------
# VOLUMN 指定掛載空間,可掛本機或是其他container的空間

VOLUME ["/var/log/"]
VOLUME /var/db

RUN mkdir /var/gtu001/
RUN echo "hello world" > /var/gtu001/greeting.txt
VOLUME /var/gtu001

RUN /bin/sh -c "cd /var/gtu001 && ls -al && pwd" 

#---------------------------------------------------------
# USER 設定執行 user 及所屬 uid , gid

    
   #-- Create Windows user in the container
   #$ RUN net user /add patrick
   #-- Set it for subsequent commands
   #$ USER patrick
    

#---------------------------------------------------------
# WORKDIR 設定 工作目錄 , 若未指定系統也會替你建一個

ENV DIRPATH /path
WORKDIR $DIRPATH/$DIRNAME
RUN pwd

#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------
#---------------------------------------------------------