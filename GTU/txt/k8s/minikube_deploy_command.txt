# Startup miniKube
minikube start
minikube config set vm-driver virtualbox (option)
kubectl config use-context minikube (option)


# verify that kubectl communicates correctly with our cluster
kubectl cluster-info


#---------------------------------------------------------
 minikube ssh
 cd /c/workspace/tutorials/spring-cloud/spring-cloud-kubernetes/demo-backend
 docker build --file=Dockerfile --tag=demo-backend:latest --rm=true 
 kubectl run demo-backend --image=demo-backend:latest  --port=8080 --image-pull-policy Never
#-- The flag Never ensures, that Minikube doesn’t try to pull the image from a registry, but takes it from the local Docker host instead
#---------------------------------------------------------

# Create a deployment
kubectl run hello-minikube --image=gcr.io/google_containers/echoserver:1.4 --port=8080

<<<暫時放>>>
kubectl run gtu001-boot --image=gtu001/gtu001_boot:v1 --port=8080 //(後面別用)--image-pull-policy Never
kubectl expose deployment gtu001-boot --type=NodePort


# 取得部屬項目
kubectl get deployments


# 刪除部屬項目
kubectl delete deployment <name>


# Expose it
kubectl expose deployment hello-minikube --type=NodePort


# Check pod
kubectl get pod


# 看log
kubectl get pods
kubectl logs <pod id>


# 看啟動的服務 (看ip)
kubectl get services


# 開啟已啟動的服務 <直接開瀏覽器給看結果>
minikube service <service name>


# 刪除以部屬項目
kubectl delete service demo-backend
kubectl delete deployment demo-backend


# Scale 
kubectl scale deployment hello-minikube --replicas=4


# Direct link to hello-minikube 
curl $(minikube service hello-minikube --url)



#---------------------------------------------------------
看image部屬流程
$ kubectl get pod
$ kubectl describe pod <pod name>
or
$ kubectl logs <pod name>


#---------------------------------------------------------
# 更新版本 
$ kubectl set image deployments/<deployment-name> <deployment-name>=<repo-name>/<image-name>:v2

#---------------------------------------------------------
# port forward
$ kubectl port-forward <pod name> <external port>:<pod port> 