--------------------------------------------------------------------------
第一次commit要做

	git init
	git config user.name "someone"
	git config user.email "someone@someplace.com"

--------------------------------------------------------------------------
與head差異

	git diff HEAD


--------------------------------------------------------------------------
取得異動狀態

	git status
	

顯示完整路徑 (PS : for linux 做 merge處理)

	git status | awk -v P="$(pwd)" '{ if ($1 != "modified:") {print P "/" $1} } '
	
只印要merge的檔案 (PS : for linux 做 merge處理)

	git status -s | grep ^UU | awk -v P="$(pwd)" '{print P "/" $2}'
	

--------------------------------------------------------------------------
改變檔案狀態

	git add *
	git reset 

--------------------------------------------------------------------------
將檔案回覆成未改過狀態

	git checkout HEAD GTU/src/gtu/_work/ui/FastDBQueryUI_CrudDlgUI.java
	or
	git checkout <commit_id>  <path>/<file>
	or
	
	
--------------------------------------------------------------------------
衝突速解
	# git版本大於1.6.1
	git checkout --ours <file>
	git checkout --theirs <file>

	# git版本小於1.6.1
	同theirs
		git reset -- <file>
		git checkout MERGE_HEAD -- <file>

	同ours:
		git reset -- <file>
		git checkout ORIG_HEAD -- <file>
	
	

--------------------------------------------------------------------------
交付

	git commit -m "some init msg"


--------------------------------------------------------------------------
## 互動stage change ##

	git add -i

選擇->  2: update 4: add untracked
按數字選檔案
按兩下回車鍵再按Enter回覆上個狀態

	git status 綠色是stage changed


--------------------------------------------------------------------------
重設到某版

	git reset <commit id>


--------------------------------------------------------------------------
拉最新版 

	git pull [--rebase]


--------------------------------------------------------------------------
儲存狀態
	git stash
刪除儲存
	git stash drop
彈出
	git stash pop


--------------------------------------------------------------------------
看log

	git log  --name-only           <---只有檔名
	git log  --name-status         <---次推薦
	git log  --stat                <---推薦

--------------------------------------------------------------------------
merge 處理

	上半部為   <<<遠端內容
	等號下半為 >>>本地內容
	若完全以遠端版本     --> git reset HEAD <file>
	編輯完後要用現在版本 --> git add <file>

--------------------------------------------------------------------------
以下為branch
--------------------------------------------------------------------------
查看目前branch

	git branch

--------------------------------------------------------------------------
查看目前所有branch
	
	git branch -a

	會顯示以下
		* master   <feature_branch>    <--- 本地
		  remotes/origin/<feature_branch>  <---遠端
		  remotes/origin/master

--------------------------------------------------------------------------
切換branch

	git checkout <feature_branch>

--------------------------------------------------------------------------
--------------------------------------------------------------------------
--------------------------------------------------------------------------
--------------------------------------------------------------------------
--------------------------------------------------------------------------
--------------------------------------------------------------------------
--------------------------------------------------------------------------
--------------------------------------------------------------------------
--------------------------------------------------------------------------
--------------------------------------------------------------------------
--------------------------------------------------------------------------
--------------------------------------------------------------------------
--------------------------------------------------------------------------
--------------------------------------------------------------------------
--------------------------------------------------------------------------
--------------------------------------------------------------------------
--------------------------------------------------------------------------
--------------------------------------------------------------------------
--------------------------------------------------------------------------
